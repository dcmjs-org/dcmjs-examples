{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cornerstoneMath.min.js","webpack:///webpack/bootstrap 3d74feee5419477581b5","webpack:///./math.js","webpack:///./vector3.js","webpack:///./lineSegment.js","webpack:///./quaternion.js","webpack:///./Line3.js","webpack:///./matrix4.js","webpack:///./plane.js","webpack:///./point.js","webpack:///./rect.js","webpack:///./index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","clamp","x","a","b","degToRad","degrees","Math","PI","radToDeg","radians","sign","NaN","_quaternion","_quaternion2","obj","default","_math","Vector3","y","z","constructor","set","setX","setY","setZ","setComponent","index","Error","getComponent","copy","v","add","w","undefined","console","warn","addVectors","addScalar","sub","subVectors","multiply","multiplyVectors","multiplyScalar","scalar","applyAxisAngle","quaternion","axis","angle","applyQuaternion","setFromAxisAngle","applyMatrix3","e","elements","applyMatrix4","applyProjection","q","qx","qy","qz","qw","ix","iy","iz","iw","transformDirection","normalize","divide","divideScalar","invScalar","min","max","clampScalar","minVal","maxVal","floor","ceil","round","roundToZero","negate","dot","lengthSq","length","sqrt","lengthManhattan","abs","setLength","oldLength","lerp","alpha","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","v1","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","distanceTo","distanceToSquared","dx","dy","dz","setFromMatrixPosition","setFromMatrixScale","sx","sy","sz","setFromMatrixColumn","matrix","offset","me","equals","fromArray","array","toArray","clone","sqr","dist2","distanceToPointSquared","lineSegment","point","l2","start","end","t","distanceToPoint","intersectLine","lineSegment1","lineSegment2","intersectionPoint","x1","y1","x2","y2","x3","y3","x4","y4","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","num","parseFloat","Quaternion","halfAngle","sin","cos","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_vector","_vector2","Line3","line","optionalTarget","result","delta","startP","startEnd","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","da","db","dc","daCrossDb","dcCrossDb","isNaN","intersection","distanceSq","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","Float32Array","makeRotationFromQuaternion","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","multiplyMatrices","ae","be","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","getInverse","throwOnInvertible","det","msg","identity","applyToVector3Array","j","makeTranslation","makeScale","Plane","constant","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","v2","plane","inverseNormalLength","distanceToSphere","sphere","center","radius","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","direction","denominator","intersectPlane","targetPlane","origin","intersectionData","h1","h2","n1dotn2","coplanarPoint","translate","pageToPoint","pageX","pageY","subtract","lhs","rhs","distance","from","to","distanceSquared","insideRect","rect","left","width","top","height","findClosestPoint","sources","distances","minDistance","forEach","source","push","indexOf","rectToLineSegments","segment","_lineSegment2","rectToPoints","topLeft","bottomRight","doesIntersect","rect1","rect2","intersectLeftRight","intersectTopBottom","rect1Points","rect2Points","getIntersectionRect","intersectRect","_lineSegment","_interopRequireDefault","_Line","_matrix","_plane","_point","_rect"],"mappings":"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","file":"cornerstoneMath.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneMath\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneMath\"] = factory();\n\telse\n\t\troot[\"cornerstoneMath\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*! cornerstone-math - 0.1.6 - 2017-06-09 | (c) 2017 Chris Hafey | https://github.com/chafey/cornerstoneTools */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneMath\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneMath\"] = factory();\n\telse\n\t\troot[\"cornerstoneMath\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Based on THREE.JS\nfunction clamp(x, a, b) {\n  return x < a ? a : x > b ? b : x;\n}\n\nfunction degToRad(degrees) {\n  var degreeToRadiansFactor = Math.PI / 180;\n\n  return degrees * degreeToRadiansFactor;\n}\n\nfunction radToDeg(radians) {\n  var radianToDegreesFactor = 180 / Math.PI;\n\n  return radians * radianToDegreesFactor;\n}\n\n// Returns sign of number\nfunction sign(x) {\n  return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n\nexports.clamp = clamp;\nexports.degToRad = degToRad;\nexports.radToDeg = radToDeg;\nexports.sign = sign;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _quaternion = __webpack_require__(3);\n\nvar _quaternion2 = _interopRequireDefault(_quaternion);\n\nvar _math = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Based on THREE.JS\nvar Vector3 = function Vector3(x, y, z) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nVector3.prototype = {\n\n  constructor: Vector3,\n\n  set: function set(x, y, z) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n  },\n  setX: function setX(x) {\n\n    this.x = x;\n\n    return this;\n  },\n  setY: function setY(y) {\n\n    this.y = y;\n\n    return this;\n  },\n  setZ: function setZ(z) {\n\n    this.z = z;\n\n    return this;\n  },\n  setComponent: function setComponent(index, value) {\n\n    switch (index) {\n\n      case 0:\n        this.x = value;break;\n      case 1:\n        this.y = value;break;\n      case 2:\n        this.z = value;break;\n      default:\n        throw new Error('index is out of range: ' + index);\n\n    }\n  },\n  getComponent: function getComponent(index) {\n\n    switch (index) {\n\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      case 2:\n        return this.z;\n      default:\n        throw new Error('index is out of range: ' + index);\n\n    }\n  },\n  copy: function copy(v) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n  },\n  add: function add(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n  },\n  addScalar: function addScalar(s) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n  },\n  addVectors: function addVectors(a, b) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n  },\n  sub: function sub(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n  },\n  subVectors: function subVectors(a, b) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n  },\n  multiply: function multiply(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(scalar) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n  },\n  multiplyVectors: function multiplyVectors(a, b) {\n\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n  },\n\n\n  applyAxisAngle: function () {\n\n    var quaternion = void 0;\n\n    return function (axis, angle) {\n\n      if (quaternion === undefined) {\n        quaternion = new _quaternion2.default();\n      }\n\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n\n      return this;\n    };\n  }(),\n\n  applyMatrix3: function applyMatrix3(m) {\n\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n  },\n  applyMatrix4: function applyMatrix4(m) {\n\n    // Input: THREE.Matrix4 affine matrix\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n  },\n  applyProjection: function applyProjection(m) {\n\n    // Input: THREE.Matrix4 projection matrix\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // Perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n\n    return this;\n  },\n  applyQuaternion: function applyQuaternion(q) {\n\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n\n    // Calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z;\n\n    // Calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return this;\n  },\n  transformDirection: function transformDirection(m) {\n\n    // Input: THREE.Matrix4 affine matrix\n    // Vector interpreted as a direction\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    this.normalize();\n\n    return this;\n  },\n  divide: function divide(v) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n  },\n  divideScalar: function divideScalar(scalar) {\n\n    if (scalar !== 0) {\n\n      var invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  min: function min(v) {\n\n    if (this.x > v.x) {\n\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n\n      this.y = v.y;\n    }\n\n    if (this.z > v.z) {\n\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  max: function max(v) {\n\n    if (this.x < v.x) {\n\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n\n      this.y = v.y;\n    }\n\n    if (this.z < v.z) {\n\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  clamp: function clamp(min, max) {\n\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if (this.x < min.x) {\n\n      this.x = min.x;\n    } else if (this.x > max.x) {\n\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n\n      this.y = min.y;\n    } else if (this.y > max.y) {\n\n      this.y = max.y;\n    }\n\n    if (this.z < min.z) {\n\n      this.z = min.z;\n    } else if (this.z > max.z) {\n\n      this.z = max.z;\n    }\n\n    return this;\n  },\n\n\n  clampScalar: function () {\n\n    var min = void 0,\n        max = void 0;\n\n    return function (minVal, maxVal) {\n\n      if (min === undefined) {\n\n        min = new Vector3();\n        max = new Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n\n      return this.clamp(min, max);\n    };\n  }(),\n\n  floor: function floor() {\n\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n\n    return this;\n  },\n  ceil: function ceil() {\n\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n\n    return this;\n  },\n  round: function round() {\n\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n\n    return this;\n  },\n  roundToZero: function roundToZero() {\n\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\n    return this;\n  },\n  negate: function negate() {\n\n    return this.multiplyScalar(-1);\n  },\n  dot: function dot(v) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function lengthSq() {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function length() {\n\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function lengthManhattan() {\n\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function normalize() {\n\n    return this.divideScalar(this.length());\n  },\n  setLength: function setLength(l) {\n\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function lerp(v, alpha) {\n\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n\n    return this;\n  },\n  cross: function cross(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n  },\n  crossVectors: function crossVectors(a, b) {\n\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n  },\n\n\n  projectOnVector: function () {\n\n    var v1 = void 0,\n        dot = void 0;\n\n    return function (vector) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(vector).normalize();\n\n      dot = this.dot(v1);\n\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n\n  projectOnPlane: function () {\n\n    var v1 = void 0;\n\n    return function (planeNormal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(v1);\n    };\n  }(),\n\n  reflect: function () {\n\n    // Reflect incident vector off plane orthogonal to normal\n    // Normal is assumed to have unit length\n\n    var v1 = void 0;\n\n    return function (normal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n\n  angleTo: function angleTo(v) {\n\n    var theta = this.dot(v) / (this.length() * v.length());\n\n    // Clamp, to handle numerical problems\n\n    return Math.acos((0, _math.clamp)(theta, -1, 1));\n  },\n  distanceTo: function distanceTo(v) {\n\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function distanceToSquared(v) {\n\n    var dx = this.x - v.x;\n    var dy = this.y - v.y;\n    var dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setFromMatrixPosition: function setFromMatrixPosition(m) {\n\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n\n    return this;\n  },\n  setFromMatrixScale: function setFromMatrixScale(m) {\n\n    var sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    var sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    var sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  },\n  setFromMatrixColumn: function setFromMatrixColumn(index, matrix) {\n\n    var offset = index * 4;\n\n    var me = matrix.elements;\n\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n\n    return this;\n  },\n  equals: function equals(v) {\n\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function fromArray(array) {\n\n    this.x = array[0];\n    this.y = array[1];\n    this.z = array[2];\n\n    return this;\n  },\n  toArray: function toArray() {\n\n    return [this.x, this.y, this.z];\n  },\n  clone: function clone() {\n\n    return new Vector3(this.x, this.y, this.z);\n  }\n};\n\nexports.default = Vector3;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _math = __webpack_require__(0);\n\n// Based on  http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction sqr(x) {\n  return x * x;\n}\n\nfunction dist2(v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nfunction distanceToPointSquared(lineSegment, point) {\n  var l2 = dist2(lineSegment.start, lineSegment.end);\n\n  if (l2 === 0) {\n    return dist2(point, lineSegment.start);\n  }\n  var t = ((point.x - lineSegment.start.x) * (lineSegment.end.x - lineSegment.start.x) + (point.y - lineSegment.start.y) * (lineSegment.end.y - lineSegment.start.y)) / l2;\n\n  if (t < 0) {\n    return dist2(point, lineSegment.start);\n  }\n  if (t > 1) {\n    return dist2(point, lineSegment.end);\n  }\n\n  var pt = {\n    x: lineSegment.start.x + t * (lineSegment.end.x - lineSegment.start.x),\n    y: lineSegment.start.y + t * (lineSegment.end.y - lineSegment.start.y)\n  };\n\n  return dist2(point, pt);\n}\n\nfunction distanceToPoint(lineSegment, point) {\n  return Math.sqrt(distanceToPointSquared(lineSegment, point));\n}\n\n// Returns intersection points of two lines\nfunction intersectLine(lineSegment1, lineSegment2) {\n  var intersectionPoint = {};\n\n  var x1 = lineSegment1.start.x,\n      y1 = lineSegment1.start.y,\n      x2 = lineSegment1.end.x,\n      y2 = lineSegment1.end.y,\n      x3 = lineSegment2.start.x,\n      y3 = lineSegment2.start.y,\n      x4 = lineSegment2.end.x,\n      y4 = lineSegment2.end.y;\n\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0; // Coefficients of line equations\n  var r1 = void 0,\n      r2 = void 0,\n      r3 = void 0,\n      r4 = void 0; // Sign values\n\n  var denom = void 0,\n      num = void 0; // Intermediate values\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2;\n\n  // Compute r3 and r4\n  r3 = a1 * x3 + b1 * y3 + c1;\n  r4 = a1 * x4 + b1 * y4 + c1;\n\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n   * same side of line 1, the line segments do not intersect.\n   */\n\n  if (r3 !== 0 && r4 !== 0 && (0, _math.sign)(r3) === (0, _math.sign)(r4)) {\n    return;\n  }\n\n  /* Compute a2, b2, c2 */\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4;\n\n  /* Compute r1 and r2 */\n\n  r1 = a2 * x1 + b2 * y1 + c2;\n  r2 = a2 * x2 + b2 * y2 + c2;\n\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n   * on same side of second line segment, the line segments do\n   * not intersect.\n   */\n\n  if (r1 !== 0 && r2 !== 0 && (0, _math.sign)(r1) === (0, _math.sign)(r2)) {\n    return;\n  }\n\n  /* Line segments intersect: compute intersection point.\n   */\n\n  denom = a1 * b2 - a2 * b1;\n\n  /* The denom/2 is to get rounding instead of truncating.  It\n   * is added or subtracted to the numerator, depending upon the\n   * sign of the numerator.\n   */\n\n  num = b1 * c2 - b2 * c1;\n  var x = parseFloat(num / denom);\n\n  num = a2 * c1 - a1 * c2;\n  var y = parseFloat(num / denom);\n\n  intersectionPoint.x = x;\n  intersectionPoint.y = y;\n\n  return intersectionPoint;\n}\n\n// Module exports\nvar lineSegment = {\n  distanceToPoint: distanceToPoint,\n  intersectLine: intersectLine\n};\n\nexports.default = lineSegment;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Quaternion = function Quaternion(x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nQuaternion.prototype.setFromAxisAngle = function (axis, angle) {\n  var halfAngle = angle / 2,\n      s = Math.sin(halfAngle);\n\n  this.x = axis.x * s;\n  this.y = axis.y * s;\n  this.z = axis.z * s;\n  this.w = Math.cos(halfAngle);\n\n  return this;\n};\n\nQuaternion.prototype.multiplyQuaternions = function (a, b) {\n  var qax = a.x,\n      qay = a.y,\n      qaz = a.z,\n      qaw = a.w;\n  var qbx = b.x,\n      qby = b.y,\n      qbz = b.z,\n      qbw = b.w;\n\n  this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n  this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n  this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n  this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n  return this;\n};\n\nQuaternion.prototype.setFromRotationMatrix = function (m) {\n  var te = m.elements,\n      m11 = te[0],\n      m12 = te[4],\n      m13 = te[8],\n      m21 = te[1],\n      m22 = te[5],\n      m23 = te[9],\n      m31 = te[2],\n      m32 = te[6],\n      m33 = te[10],\n      trace = m11 + m22 + m33,\n      s = void 0;\n\n  if (trace > 0) {\n\n    s = 0.5 / Math.sqrt(trace + 1.0);\n\n    this.w = 0.25 / s;\n    this.x = (m32 - m23) * s;\n    this.y = (m13 - m31) * s;\n    this.z = (m21 - m12) * s;\n  } else if (m11 > m22 && m11 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n    this.w = (m32 - m23) / s;\n    this.x = 0.25 * s;\n    this.y = (m12 + m21) / s;\n    this.z = (m13 + m31) / s;\n  } else if (m22 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n    this.w = (m13 - m31) / s;\n    this.x = (m12 + m21) / s;\n    this.y = 0.25 * s;\n    this.z = (m23 + m32) / s;\n  } else {\n\n    s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n    this.w = (m21 - m12) / s;\n    this.x = (m13 + m31) / s;\n    this.y = (m23 + m32) / s;\n    this.z = 0.25 * s;\n  }\n\n  return this;\n};\n\nexports.default = Quaternion;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vector = __webpack_require__(1);\n\nvar _vector2 = _interopRequireDefault(_vector);\n\nvar _math = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Copied from THREE.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nvar Line3 = function () {\n  function Line3(start, end) {\n    _classCallCheck(this, Line3);\n\n    this.start = start !== undefined ? start : new _vector2.default();\n    this.end = end !== undefined ? end : new _vector2.default();\n  }\n\n  _createClass(Line3, [{\n    key: 'set',\n    value: function set(start, end) {\n\n      this.start.copy(start);\n      this.end.copy(end);\n\n      return this;\n    }\n  }, {\n    key: 'copy',\n    value: function copy(line) {\n\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n\n      return this;\n    }\n  }, {\n    key: 'center',\n    value: function center(optionalTarget) {\n\n      var result = optionalTarget || new _vector2.default();\n\n      return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n    }\n  }, {\n    key: 'delta',\n    value: function delta(optionalTarget) {\n\n      var result = optionalTarget || new _vector2.default();\n\n      return result.subVectors(this.end, this.start);\n    }\n  }, {\n    key: 'distanceSq',\n    value: function distanceSq() {\n\n      return this.start.distanceToSquared(this.end);\n    }\n  }, {\n    key: 'distance',\n    value: function distance() {\n\n      return this.start.distanceTo(this.end);\n    }\n  }, {\n    key: 'at',\n    value: function at(t, optionalTarget) {\n\n      var result = optionalTarget || new _vector2.default();\n\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    }\n  }, {\n    key: 'closestPointToPointParameter',\n    value: function closestPointToPointParameter() {\n\n      var startP = new _vector2.default();\n      var startEnd = new _vector2.default();\n\n      return function (point, clampToLine) {\n\n        startP.subVectors(point, this.start);\n        startEnd.subVectors(this.end, this.start);\n\n        var startEnd2 = startEnd.dot(startEnd);\n        var startEnd_startP = startEnd.dot(startP);\n\n        var t = startEnd_startP / startEnd2;\n\n        if (clampToLine) {\n\n          t = (0, _math.clamp)(t, 0, 1);\n        }\n\n        return t;\n      };\n    }\n  }, {\n    key: 'closestPointToPoint',\n    value: function closestPointToPoint(point, clampToLine, optionalTarget) {\n\n      var t = this.closestPointToPointParameter(point, clampToLine);\n\n      var result = optionalTarget || new _vector2.default();\n\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    }\n  }, {\n    key: 'applyMatrix4',\n    value: function applyMatrix4(matrix) {\n\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n\n      return this;\n    }\n  }, {\n    key: 'equals',\n    value: function equals(line) {\n\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n\n      return new Line3().copy(this);\n    }\n  }, {\n    key: 'intersectLine',\n    value: function intersectLine(line) {\n      // http://stackoverflow.com/questions/2316490/the-algorithm-to-find-the-point-of-intersection-of-two-3d-line-segment/10288710#10288710\n      var da = this.end.clone().sub(this.start);\n      var db = line.end.clone().sub(line.start);\n      var dc = line.start.clone().sub(this.start);\n\n      var daCrossDb = da.clone().cross(db);\n      var dcCrossDb = dc.clone().cross(db);\n\n      if (dc.dot(da) === 0) {\n        // Lines are not coplanar, stop here\n        return;\n      }\n\n      var s = dcCrossDb.dot(daCrossDb) / daCrossDb.lengthSq();\n\n      // Make sure we have an intersection\n      if (s > 1.0 || isNaN(s)) {\n        return;\n      }\n\n      var intersection = this.start.clone().add(da.clone().multiplyScalar(s));\n      var distanceTest = intersection.clone().sub(line.start).lengthSq() + intersection.clone().sub(line.end).lengthSq();\n\n      if (distanceTest <= line.distanceSq()) {\n        return intersection;\n      }\n\n      return;\n    }\n  }]);\n\n  return Line3;\n}();\n\nexports.default = Line3;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _vector = __webpack_require__(1);\n\nvar _vector2 = _interopRequireDefault(_vector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Based on THREE.JS\nvar Matrix4 = function Matrix4(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n  this.elements = new Float32Array(16);\n\n  // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\n  //   We should not support semi specification of Matrix4, it is just weird.\n\n  var te = this.elements;\n\n  te[0] = n11 !== undefined ? n11 : 1;te[4] = n12 || 0;te[8] = n13 || 0;te[12] = n14 || 0;\n  te[1] = n21 || 0;te[5] = n22 !== undefined ? n22 : 1;te[9] = n23 || 0;te[13] = n24 || 0;\n  te[2] = n31 || 0;te[6] = n32 || 0;te[10] = n33 !== undefined ? n33 : 1;te[14] = n34 || 0;\n  te[3] = n41 || 0;te[7] = n42 || 0;te[11] = n43 || 0;te[15] = n44 !== undefined ? n44 : 1;\n};\n\nMatrix4.prototype.makeRotationFromQuaternion = function (q) {\n  var te = this.elements;\n\n  var x = q.x,\n      y = q.y,\n      z = q.z,\n      w = q.w;\n  var x2 = x + x,\n      y2 = y + y,\n      z2 = z + z;\n  var xx = x * x2,\n      xy = x * y2,\n      xz = x * z2;\n  var yy = y * y2,\n      yz = y * z2,\n      zz = z * z2;\n  var wx = w * x2,\n      wy = w * y2,\n      wz = w * z2;\n\n  te[0] = 1 - (yy + zz);\n  te[4] = xy - wz;\n  te[8] = xz + wy;\n\n  te[1] = xy + wz;\n  te[5] = 1 - (xx + zz);\n  te[9] = yz - wx;\n\n  te[2] = xz - wy;\n  te[6] = yz + wx;\n  te[10] = 1 - (xx + yy);\n\n  // Last column\n  te[3] = 0;\n  te[7] = 0;\n  te[11] = 0;\n\n  // Bottom row\n  te[12] = 0;\n  te[13] = 0;\n  te[14] = 0;\n  te[15] = 1;\n\n  return this;\n};\n\nMatrix4.prototype.multiplyMatrices = function (a, b) {\n  var ae = a.elements;\n  var be = b.elements;\n  var te = this.elements;\n\n  var a11 = ae[0],\n      a12 = ae[4],\n      a13 = ae[8],\n      a14 = ae[12];\n  var a21 = ae[1],\n      a22 = ae[5],\n      a23 = ae[9],\n      a24 = ae[13];\n  var a31 = ae[2],\n      a32 = ae[6],\n      a33 = ae[10],\n      a34 = ae[14];\n  var a41 = ae[3],\n      a42 = ae[7],\n      a43 = ae[11],\n      a44 = ae[15];\n\n  var b11 = be[0],\n      b12 = be[4],\n      b13 = be[8],\n      b14 = be[12];\n  var b21 = be[1],\n      b22 = be[5],\n      b23 = be[9],\n      b24 = be[13];\n  var b31 = be[2],\n      b32 = be[6],\n      b33 = be[10],\n      b34 = be[14];\n  var b41 = be[3],\n      b42 = be[7],\n      b43 = be[11],\n      b44 = be[15];\n\n  te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n  te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n  te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n  te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n  te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n  te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n  te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n  te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n  te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n  te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n  te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n  te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n  te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n  te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n  te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n  te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n  return this;\n};\n\nMatrix4.prototype.multiply = function (m, n) {\n\n  if (n !== undefined) {\n\n    console.warn('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\n    return this.multiplyMatrices(m, n);\n  }\n\n  return this.multiplyMatrices(this, m);\n};\n\nMatrix4.prototype.getInverse = function (m, throwOnInvertible) {\n\n  // Based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n  var te = this.elements;\n  var me = m.elements;\n\n  var n11 = me[0],\n      n12 = me[4],\n      n13 = me[8],\n      n14 = me[12];\n  var n21 = me[1],\n      n22 = me[5],\n      n23 = me[9],\n      n24 = me[13];\n  var n31 = me[2],\n      n32 = me[6],\n      n33 = me[10],\n      n34 = me[14];\n  var n41 = me[3],\n      n42 = me[7],\n      n43 = me[11],\n      n44 = me[15];\n\n  te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n  te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n  te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n  te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n  te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n  te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n  te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n  te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n  te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n  te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n  te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n  te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n  te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n  te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n  te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n  te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n  var det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n  if (det === 0) {\n\n    var msg = 'Matrix4.getInverse(): can\\'t invert matrix, determinant is 0';\n\n    if (throwOnInvertible || false) {\n\n      throw new Error(msg);\n    } else {\n\n      console.warn(msg);\n    }\n\n    this.identity();\n\n    return this;\n  }\n\n  this.multiplyScalar(1 / det);\n\n  return this;\n};\n\nMatrix4.prototype.applyToVector3Array = function () {\n\n  var v1 = new _vector2.default();\n\n  return function (array, offset, length) {\n\n    if (offset === undefined) {\n      offset = 0;\n    }\n    if (length === undefined) {\n      length = array.length;\n    }\n\n    for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n\n      v1.x = array[j];\n      v1.y = array[j + 1];\n      v1.z = array[j + 2];\n\n      v1.applyMatrix4(this);\n\n      array[j] = v1.x;\n      array[j + 1] = v1.y;\n      array[j + 2] = v1.z;\n    }\n\n    return array;\n  };\n};\n\nMatrix4.prototype.makeTranslation = function (x, y, z) {\n\n  this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\n  return this;\n};\nMatrix4.prototype.multiplyScalar = function (s) {\n\n  var te = this.elements;\n\n  te[0] *= s;te[4] *= s;te[8] *= s;te[12] *= s;\n  te[1] *= s;te[5] *= s;te[9] *= s;te[13] *= s;\n  te[2] *= s;te[6] *= s;te[10] *= s;te[14] *= s;\n  te[3] *= s;te[7] *= s;te[11] *= s;te[15] *= s;\n\n  return this;\n};\nMatrix4.prototype.set = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\n  var te = this.elements;\n\n  te[0] = n11;te[4] = n12;te[8] = n13;te[12] = n14;\n  te[1] = n21;te[5] = n22;te[9] = n23;te[13] = n24;\n  te[2] = n31;te[6] = n32;te[10] = n33;te[14] = n34;\n  te[3] = n41;te[7] = n42;te[11] = n43;te[15] = n44;\n\n  return this;\n};\n\nMatrix4.prototype.makeScale = function (x, y, z) {\n\n  this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\n  return this;\n};\n\nexports.default = Matrix4;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _vector = __webpack_require__(1);\n\nvar _vector2 = _interopRequireDefault(_vector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copied from Three.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nvar Plane = function Plane(normal, constant) {\n\n  this.normal = normal !== undefined ? normal : new _vector2.default(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nPlane.prototype = {\n\n  constructor: Plane,\n\n  set: function set(normal, constant) {\n\n    this.normal.copy(normal);\n    this.constant = constant;\n\n    return this;\n  },\n  setComponents: function setComponents(x, y, z, w) {\n\n    this.normal.set(x, y, z);\n    this.constant = w;\n\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function setFromNormalAndCoplanarPoint(normal, point) {\n\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // Must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n\n\n  setFromCoplanarPoints: function () {\n\n    var v1 = new _vector2.default();\n    var v2 = new _vector2.default();\n\n    return function (a, b, c) {\n\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\n\n      // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n\n      return this;\n    };\n  }(),\n\n  copy: function copy(plane) {\n\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n\n    return this;\n  },\n  normalize: function normalize() {\n\n    // Note: will lead to a divide by zero if the plane is invalid.\n\n    var inverseNormalLength = 1.0 / this.normal.length();\n\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n\n    return this;\n  },\n  negate: function negate() {\n\n    this.constant *= -1;\n    this.normal.negate();\n\n    return this;\n  },\n  distanceToPoint: function distanceToPoint(point) {\n\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function distanceToSphere(sphere) {\n\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function projectPoint(point, optionalTarget) {\n\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function orthoPoint(point, optionalTarget) {\n\n    var perpendicularMagnitude = this.distanceToPoint(point);\n\n    var result = optionalTarget || new _vector2.default();\n\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  isIntersectionLine: function isIntersectionLine(line) {\n\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n\n\n  intersectLine: function () {\n\n    var v1 = new _vector2.default();\n\n    return function (line, optionalTarget) {\n\n      var result = optionalTarget || new _vector2.default();\n\n      var direction = line.delta(v1);\n\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n\n        // Line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n\n          return result.copy(line.start);\n        }\n\n        // Unsure if this is the correct method to handle this case.\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n\n  intersectPlane: function intersectPlane(targetPlane) {\n    // Returns the intersection line between two planes\n    var direction = this.normal.clone().cross(targetPlane.normal);\n    var origin = new _vector2.default();\n    var intersectionData = {\n      origin: origin,\n      direction: direction\n    };\n\n    // If the planes are parallel, return an empty vector for the\n    // Intersection line\n    if (this.normal.clone().cross(targetPlane.normal).length < 1e-10) {\n      intersectionData.direction = new _vector2.default();\n\n      return intersectionData;\n    }\n\n    var h1 = this.constant;\n    var h2 = targetPlane.constant;\n    var n1dotn2 = this.normal.clone().dot(targetPlane.normal);\n\n    var c1 = -(h1 - h2 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n    var c2 = -(h2 - h1 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n\n    intersectionData.origin = this.normal.clone().multiplyScalar(c1).add(targetPlane.normal.clone().multiplyScalar(c2));\n\n    return intersectionData;\n  },\n  coplanarPoint: function coplanarPoint(optionalTarget) {\n\n    var result = optionalTarget || new _vector2.default();\n\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  translate: function translate(offset) {\n\n    this.constant = this.constant - offset.dot(this.normal);\n\n    return this;\n  },\n  equals: function equals(plane) {\n\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  },\n  clone: function clone() {\n\n    return new Plane().copy(this);\n  }\n};\n\nexports.default = Plane;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction pageToPoint(e) {\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\nfunction subtract(lhs, rhs) {\n  return {\n    x: lhs.x - rhs.x,\n    y: lhs.y - rhs.y\n  };\n}\n\nfunction copy(point) {\n  return {\n    x: point.x,\n    y: point.y\n  };\n}\n\nfunction distance(from, to) {\n  return Math.sqrt(distanceSquared(from, to));\n}\n\nfunction distanceSquared(from, to) {\n  var delta = subtract(from, to);\n\n  return delta.x * delta.x + delta.y * delta.y;\n}\n\nfunction insideRect(point, rect) {\n  if (point.x < rect.left || point.x > rect.left + rect.width || point.y < rect.top || point.y > rect.top + rect.height) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns the closest source point to a target point\n * given an array of source points.\n *\n * @param sources An Array of source Points\n * @param target The target Point\n * @returns Point The closest point from the points array\n */\nfunction findClosestPoint(sources, target) {\n  var distances = [];\n  var minDistance = void 0;\n\n  sources.forEach(function (source, index) {\n    var d = distance(source, target);\n\n    distances.push(d);\n\n    if (index === 0) {\n      minDistance = d;\n    } else {\n      minDistance = Math.min(d, minDistance);\n    }\n  });\n\n  var index = distances.indexOf(minDistance);\n\n  return sources[index];\n}\n\nvar point = {\n  subtract: subtract,\n  copy: copy,\n  pageToPoint: pageToPoint,\n  distance: distance,\n  distanceSquared: distanceSquared,\n  insideRect: insideRect,\n  findClosestPoint: findClosestPoint\n};\n\nexports.default = point;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lineSegment = __webpack_require__(2);\n\nvar _lineSegment2 = _interopRequireDefault(_lineSegment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rectToLineSegments(rect) {\n  var top = {\n    start: {\n      x: rect.left,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top\n\n    }\n  };\n  var right = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n\n    }\n  };\n  var bottom = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top + rect.height\n\n    }\n  };\n  var left = {\n    start: {\n      x: rect.left,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top\n\n    }\n  };\n  var lineSegments = [top, right, bottom, left];\n\n  return lineSegments;\n}\n\nfunction distanceToPoint(rect, point) {\n  var minDistance = 655535;\n  var lineSegments = rectToLineSegments(rect);\n\n  lineSegments.forEach(function (segment) {\n    var distance = _lineSegment2.default.distanceToPoint(segment, point);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n\n  return minDistance;\n}\n\n// Returns top-left and bottom-right points of the rectangle\nfunction rectToPoints(rect) {\n  var rectPoints = {\n    topLeft: {\n      x: rect.left,\n      y: rect.top\n    },\n    bottomRight: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    }\n  };\n\n  return rectPoints;\n}\n\n// Returns whether two non-rotated rectangles are intersected\nfunction doesIntersect(rect1, rect2) {\n  var intersectLeftRight = void 0;\n  var intersectTopBottom = void 0;\n\n  var rect1Points = rectToPoints(rect1);\n  var rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectLeftRight = !(rect1Points.bottomRight.x <= rect2Points.topLeft.x || rect2Points.bottomRight.x <= rect1Points.topLeft.x);\n    } else {\n      intersectLeftRight = !(rect1Points.bottomRight.x <= rect2Points.bottomRight.x || rect2Points.topLeft.x <= rect1Points.topLeft.x);\n    }\n  } else if (rect2.width >= 0) {\n    intersectLeftRight = !(rect1Points.topLeft.x <= rect2Points.topLeft.x || rect2Points.bottomRight.x <= rect1Points.bottomRight.x);\n  } else {\n    intersectLeftRight = !(rect1Points.topLeft.x <= rect2Points.bottomRight.x || rect2Points.topLeft.x <= rect1Points.bottomRight.x);\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectTopBottom = !(rect1Points.bottomRight.y <= rect2Points.topLeft.y || rect2Points.bottomRight.y <= rect1Points.topLeft.y);\n    } else {\n      intersectTopBottom = !(rect1Points.bottomRight.y <= rect2Points.bottomRight.y || rect2Points.topLeft.y <= rect1Points.topLeft.y);\n    }\n  } else if (rect2.height >= 0) {\n    intersectTopBottom = !(rect1Points.topLeft.y <= rect2Points.topLeft.y || rect2Points.bottomRight.y <= rect1Points.bottomRight.y);\n  } else {\n    intersectTopBottom = !(rect1Points.topLeft.y <= rect2Points.bottomRight.y || rect2Points.top <= rect1Points.bottomRight.y);\n  }\n\n  return intersectLeftRight && intersectTopBottom;\n}\n\n// Returns intersection points of two non-rotated rectangles\nfunction getIntersectionRect(rect1, rect2) {\n  var intersectRect = {\n    topLeft: {},\n    bottomRight: {}\n  };\n\n  if (!doesIntersect(rect1, rect2)) {\n    return;\n  }\n\n  var rect1Points = rectToPoints(rect1);\n  var rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.topLeft.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n    } else {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n    }\n  } else if (rect2.width >= 0) {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n  } else {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.topLeft.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.topLeft.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n    } else {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n    }\n  } else if (rect2.height >= 0) {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n  } else {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.topLeft.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n  }\n\n  // Returns top-left and bottom-right points of intersected rectangle\n  return intersectRect;\n}\n\nvar rect = {\n  distanceToPoint: distanceToPoint,\n  getIntersectionRect: getIntersectionRect\n};\n\nexports.default = rect;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n         value: true\n});\n\nvar _Line = __webpack_require__(4);\n\nObject.defineProperty(exports, 'Line3', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_Line).default;\n         }\n});\n\nvar _lineSegment = __webpack_require__(2);\n\nObject.defineProperty(exports, 'lineSegment', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_lineSegment).default;\n         }\n});\n\nvar _math = __webpack_require__(0);\n\nObject.defineProperty(exports, 'clamp', {\n         enumerable: true,\n         get: function get() {\n                  return _math.clamp;\n         }\n});\nObject.defineProperty(exports, 'degToRad', {\n         enumerable: true,\n         get: function get() {\n                  return _math.degToRad;\n         }\n});\nObject.defineProperty(exports, 'radToDeg', {\n         enumerable: true,\n         get: function get() {\n                  return _math.radToDeg;\n         }\n});\nObject.defineProperty(exports, 'sign', {\n         enumerable: true,\n         get: function get() {\n                  return _math.sign;\n         }\n});\n\nvar _matrix = __webpack_require__(5);\n\nObject.defineProperty(exports, 'Matrix4', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_matrix).default;\n         }\n});\n\nvar _plane = __webpack_require__(6);\n\nObject.defineProperty(exports, 'Plane', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_plane).default;\n         }\n});\n\nvar _point = __webpack_require__(7);\n\nObject.defineProperty(exports, 'point', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_point).default;\n         }\n});\n\nvar _quaternion = __webpack_require__(3);\n\nObject.defineProperty(exports, 'quaternion', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_quaternion).default;\n         }\n});\n\nvar _rect = __webpack_require__(8);\n\nObject.defineProperty(exports, 'rect', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_rect).default;\n         }\n});\n\nvar _vector = __webpack_require__(1);\n\nObject.defineProperty(exports, 'Vector3', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_vector).default;\n         }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cornerstoneMath.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3d74feee5419477581b5","// Based on THREE.JS\nfunction clamp (x, a, b) {\n  return (x < a) ? a : ((x > b) ? b : x);\n}\n\nfunction degToRad (degrees) {\n  const degreeToRadiansFactor = Math.PI / 180;\n\n\n  return degrees * degreeToRadiansFactor;\n}\n\nfunction radToDeg (radians) {\n  const radianToDegreesFactor = 180 / Math.PI;\n\n\n  return radians * radianToDegreesFactor;\n}\n\n// Returns sign of number\nfunction sign (x) {\n  return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n\nexport {\n  clamp,\n  degToRad,\n  radToDeg,\n  sign\n};\n\n\n\n// WEBPACK FOOTER //\n// ./math.js","import Quaternion from './quaternion.js';\nimport { clamp } from './math.js';\n\n// Based on THREE.JS\nconst Vector3 = function (x, y, z) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n\n};\n\nVector3.prototype = {\n\n  constructor: Vector3,\n\n  set (x, y, z) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n\n  },\n\n  setX (x) {\n\n    this.x = x;\n\n    return this;\n\n  },\n\n  setY (y) {\n\n    this.y = y;\n\n    return this;\n\n  },\n\n  setZ (z) {\n\n    this.z = z;\n\n    return this;\n\n  },\n\n  setComponent (index, value) {\n\n    switch (index) {\n\n    case 0: this.x = value; break;\n    case 1: this.y = value; break;\n    case 2: this.z = value; break;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  getComponent (index) {\n\n    switch (index) {\n\n    case 0: return this.x;\n    case 1: return this.y;\n    case 2: return this.z;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  copy (v) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n\n  },\n\n  add (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\n      return this.addVectors(v, w);\n\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n\n  },\n\n  addScalar (s) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n\n  },\n\n  addVectors (a, b) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n\n  },\n\n  sub (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\n      return this.subVectors(v, w);\n\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n\n  },\n\n  subVectors (a, b) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n\n  },\n\n  multiply (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\n      return this.multiplyVectors(v, w);\n\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n\n  },\n\n  multiplyScalar (scalar) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n\n  },\n\n  multiplyVectors (a, b) {\n\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n\n  },\n\n\n  applyAxisAngle: (function () {\n\n    let quaternion;\n\n    return function (axis, angle) {\n\n      if (quaternion === undefined) {\n        quaternion = new Quaternion();\n      }\n\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n\n      return this;\n\n    };\n\n  })(),\n\n  applyMatrix3 (m) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n\n  },\n\n  applyMatrix4 (m) {\n\n        // Input: THREE.Matrix4 affine matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n\n  },\n\n  applyProjection (m) {\n\n        // Input: THREE.Matrix4 projection matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n    const d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // Perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n\n    return this;\n\n  },\n\n  applyQuaternion (q) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const qx = q.x;\n    const qy = q.y;\n    const qz = q.z;\n    const qw = q.w;\n\n        // Calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n        // Calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return this;\n\n  },\n\n  transformDirection (m) {\n\n        // Input: THREE.Matrix4 affine matrix\n        // Vector interpreted as a direction\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    this.normalize();\n\n    return this;\n\n  },\n\n  divide (v) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n\n  },\n\n  divideScalar (scalar) {\n\n    if (scalar !== 0) {\n\n      const invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n\n    }\n\n    return this;\n\n  },\n\n  min (v) {\n\n    if (this.x > v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y > v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z > v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  max (v) {\n\n    if (this.x < v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y < v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z < v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  clamp (min, max) {\n\n        // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if (this.x < min.x) {\n\n      this.x = min.x;\n\n    } else if (this.x > max.x) {\n\n      this.x = max.x;\n\n    }\n\n    if (this.y < min.y) {\n\n      this.y = min.y;\n\n    } else if (this.y > max.y) {\n\n      this.y = max.y;\n\n    }\n\n    if (this.z < min.z) {\n\n      this.z = min.z;\n\n    } else if (this.z > max.z) {\n\n      this.z = max.z;\n\n    }\n\n    return this;\n\n  },\n\n  clampScalar: (function () {\n\n    let min, max;\n\n    return function (minVal, maxVal) {\n\n      if (min === undefined) {\n\n        min = new Vector3();\n        max = new Vector3();\n\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n\n      return this.clamp(min, max);\n\n    };\n\n  })(),\n\n  floor () {\n\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n\n    return this;\n\n  },\n\n  ceil () {\n\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n\n    return this;\n\n  },\n\n  round () {\n\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n\n    return this;\n\n  },\n\n  roundToZero () {\n\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n\n    return this;\n\n  },\n\n  negate () {\n\n    return this.multiplyScalar(-1);\n\n  },\n\n  dot (v) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n\n  },\n\n  lengthSq () {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n\n  },\n\n  length () {\n\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\n  },\n\n  lengthManhattan () {\n\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\n  },\n\n  normalize () {\n\n    return this.divideScalar(this.length());\n\n  },\n\n  setLength (l) {\n\n    const oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n\n  },\n\n  lerp (v, alpha) {\n\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n\n    return this;\n\n  },\n\n  cross (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\n      return this.crossVectors(v, w);\n\n    }\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n\n  },\n\n  crossVectors (a, b) {\n\n    let ax = a.x,\n      ay = a.y,\n      az = a.z;\n    let bx = b.x,\n      by = b.y,\n      bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n\n  },\n\n  projectOnVector: (function () {\n\n    let v1, dot;\n\n    return function (vector) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(vector).normalize();\n\n      dot = this.dot(v1);\n\n      return this.copy(v1).multiplyScalar(dot);\n\n    };\n\n  })(),\n\n  projectOnPlane: (function () {\n\n    let v1;\n\n    return function (planeNormal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(v1);\n\n    };\n\n  })(),\n\n  reflect: (function () {\n\n        // Reflect incident vector off plane orthogonal to normal\n        // Normal is assumed to have unit length\n\n    let v1;\n\n    return function (normal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\n    };\n\n  })(),\n\n  angleTo (v) {\n\n    const theta = this.dot(v) / (this.length() * v.length());\n\n        // Clamp, to handle numerical problems\n\n    return Math.acos(clamp(theta, -1, 1));\n\n  },\n\n  distanceTo (v) {\n\n    return Math.sqrt(this.distanceToSquared(v));\n\n  },\n\n  distanceToSquared (v) {\n\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n    const dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n  },\n\n  setFromMatrixPosition (m) {\n\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n\n    return this;\n\n  },\n\n  setFromMatrixScale (m) {\n\n    const sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    const sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    const sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  },\n\n  setFromMatrixColumn (index, matrix) {\n\n    const offset = index * 4;\n\n    const me = matrix.elements;\n\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n\n    return this;\n\n  },\n\n  equals (v) {\n\n    return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n\n  },\n\n  fromArray (array) {\n\n    this.x = array[0];\n    this.y = array[1];\n    this.z = array[2];\n\n    return this;\n\n  },\n\n  toArray () {\n\n    return [this.x, this.y, this.z];\n\n  },\n\n  clone () {\n\n    return new Vector3(this.x, this.y, this.z);\n\n  }\n\n};\n\nexport default Vector3;\n\n\n\n// WEBPACK FOOTER //\n// ./vector3.js","import { sign } from './math';\n\n // Based on  http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction sqr (x) {\n  return x * x;\n}\n\nfunction dist2 (v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nfunction distanceToPointSquared (lineSegment, point) {\n  const l2 = dist2(lineSegment.start, lineSegment.end);\n\n  if(l2 === 0) {\n    return dist2(point, lineSegment.start);\n  }\n  const t = ((point.x - lineSegment.start.x) * (lineSegment.end.x - lineSegment.start.x) +\n        (point.y - lineSegment.start.y) * (lineSegment.end.y - lineSegment.start.y)) / l2;\n\n  if(t < 0) {\n    return dist2(point, lineSegment.start);\n  }\n  if(t > 1) {\n    return dist2(point, lineSegment.end);\n  }\n\n  const pt = {\n    x: lineSegment.start.x + t * (lineSegment.end.x - lineSegment.start.x),\n    y: lineSegment.start.y + t * (lineSegment.end.y - lineSegment.start.y)\n  };\n\n\n  return dist2(point, pt);\n}\n\nfunction distanceToPoint (lineSegment, point) {\n  return Math.sqrt(distanceToPointSquared(lineSegment, point));\n}\n\n// Returns intersection points of two lines\nfunction intersectLine (lineSegment1, lineSegment2) {\n  const intersectionPoint = {};\n\n  let x1 = lineSegment1.start.x,\n    y1 = lineSegment1.start.y,\n    x2 = lineSegment1.end.x,\n    y2 = lineSegment1.end.y,\n    x3 = lineSegment2.start.x,\n    y3 = lineSegment2.start.y,\n    x4 = lineSegment2.end.x,\n    y4 = lineSegment2.end.y;\n\n  let a1, a2, b1, b2, c1, c2; // Coefficients of line equations\n  let r1, r2, r3, r4; // Sign values\n\n  let denom, num; // Intermediate values\n\n    // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2;\n\n    // Compute r3 and r4\n  r3 = a1 * x3 + b1 * y3 + c1;\n  r4 = a1 * x4 + b1 * y4 + c1;\n\n    /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n     * same side of line 1, the line segments do not intersect.\n     */\n\n  if (r3 !== 0 &&\n        r4 !== 0 &&\n        sign(r3) === sign(r4)) {\n    return;\n  }\n\n    /* Compute a2, b2, c2 */\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4;\n\n    /* Compute r1 and r2 */\n\n  r1 = a2 * x1 + b2 * y1 + c2;\n  r2 = a2 * x2 + b2 * y2 + c2;\n\n    /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n     * on same side of second line segment, the line segments do\n     * not intersect.\n     */\n\n  if (r1 !== 0 &&\n        r2 !== 0 &&\n        sign(r1) === sign(r2)) {\n    return;\n  }\n\n    /* Line segments intersect: compute intersection point.\n     */\n\n  denom = (a1 * b2) - (a2 * b1);\n\n    /* The denom/2 is to get rounding instead of truncating.  It\n     * is added or subtracted to the numerator, depending upon the\n     * sign of the numerator.\n     */\n\n  num = (b1 * c2) - (b2 * c1);\n  const x = parseFloat(num / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  const y = parseFloat(num / denom);\n\n  intersectionPoint.x = x;\n  intersectionPoint.y = y;\n\n  return intersectionPoint;\n}\n\n// Module exports\nconst lineSegment = {\n  distanceToPoint,\n  intersectLine\n};\n\nexport default lineSegment;\n\n\n\n// WEBPACK FOOTER //\n// ./lineSegment.js","const Quaternion = function Quaternion (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = (w !== undefined) ? w : 1;\n};\n\nQuaternion.prototype.setFromAxisAngle = function (axis, angle) {\n  let halfAngle = angle / 2,\n    s = Math.sin(halfAngle);\n\n  this.x = axis.x * s;\n  this.y = axis.y * s;\n  this.z = axis.z * s;\n  this.w = Math.cos(halfAngle);\n\n  return this;\n};\n\nQuaternion.prototype.multiplyQuaternions = function (a, b) {\n  let qax = a.x,\n    qay = a.y,\n    qaz = a.z,\n    qaw = a.w;\n  let qbx = b.x,\n    qby = b.y,\n    qbz = b.z,\n    qbw = b.w;\n\n  this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n  this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n  this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n  this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n  return this;\n};\n\nQuaternion.prototype.setFromRotationMatrix = function (m) {\n  let te = m.elements,\n\n    m11 = te[0],\n    m12 = te[4],\n    m13 = te[8],\n    m21 = te[1],\n    m22 = te[5],\n    m23 = te[9],\n    m31 = te[2],\n    m32 = te[6],\n    m33 = te[10],\n\n    trace = m11 + m22 + m33,\n    s;\n\n  if (trace > 0) {\n\n    s = 0.5 / Math.sqrt(trace + 1.0);\n\n    this.w = 0.25 / s;\n    this.x = (m32 - m23) * s;\n    this.y = (m13 - m31) * s;\n    this.z = (m21 - m12) * s;\n\n  } else if (m11 > m22 && m11 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n    this.w = (m32 - m23) / s;\n    this.x = 0.25 * s;\n    this.y = (m12 + m21) / s;\n    this.z = (m13 + m31) / s;\n\n  } else if (m22 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n    this.w = (m13 - m31) / s;\n    this.x = (m12 + m21) / s;\n    this.y = 0.25 * s;\n    this.z = (m23 + m32) / s;\n\n  } else {\n\n    s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n    this.w = (m21 - m12) / s;\n    this.x = (m13 + m31) / s;\n    this.y = (m23 + m32) / s;\n    this.z = 0.25 * s;\n\n  }\n\n  return this;\n};\n\nexport default Quaternion;\n\n\n\n// WEBPACK FOOTER //\n// ./quaternion.js","import Vector3 from './vector3';\nimport { clamp } from './math';\n\n// Copied from THREE.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\n\nclass Line3 {\n  constructor (start, end) {\n\n    this.start = (start !== undefined) ? start : new Vector3();\n    this.end = (end !== undefined) ? end : new Vector3();\n\n  }\n\n  set (start, end) {\n\n    this.start.copy(start);\n    this.end.copy(end);\n\n    return this;\n\n  }\n\n  copy (line) {\n\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n\n    return this;\n\n  }\n\n  center (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n\n  }\n\n  delta (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.subVectors(this.end, this.start);\n\n  }\n\n  distanceSq () {\n\n    return this.start.distanceToSquared(this.end);\n\n  }\n\n  distance () {\n\n    return this.start.distanceTo(this.end);\n\n  }\n\n  at (t, optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  closestPointToPointParameter () {\n\n    const startP = new Vector3();\n    const startEnd = new Vector3();\n\n    return function (point, clampToLine) {\n\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n\n      const startEnd2 = startEnd.dot(startEnd);\n      const startEnd_startP = startEnd.dot(startP);\n\n      let t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n\n        t = clamp(t, 0, 1);\n\n      }\n\n      return t;\n\n    };\n\n  }\n\n  closestPointToPoint (point, clampToLine, optionalTarget) {\n\n    const t = this.closestPointToPointParameter(point, clampToLine);\n\n    const result = optionalTarget || new Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  applyMatrix4 (matrix) {\n\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n\n    return this;\n\n  }\n\n  equals (line) {\n\n    return line.start.equals(this.start) && line.end.equals(this.end);\n\n  }\n\n  clone () {\n\n    return new Line3().copy(this);\n\n  }\n\n  intersectLine (line) {\n        // http://stackoverflow.com/questions/2316490/the-algorithm-to-find-the-point-of-intersection-of-two-3d-line-segment/10288710#10288710\n    const da = this.end.clone().sub(this.start);\n    const db = line.end.clone().sub(line.start);\n    const dc = line.start.clone().sub(this.start);\n\n    const daCrossDb = da.clone().cross(db);\n    const dcCrossDb = dc.clone().cross(db);\n\n    if (dc.dot(da) === 0) {\n            // Lines are not coplanar, stop here\n      return;\n    }\n\n    const s = dcCrossDb.dot(daCrossDb) / daCrossDb.lengthSq();\n\n        // Make sure we have an intersection\n    if (s > 1.0 || isNaN(s)) {\n      return;\n    }\n\n    const intersection = this.start.clone().add(da.clone().multiplyScalar(s));\n    const distanceTest = intersection.clone().sub(line.start).lengthSq() + intersection.clone().sub(line.end).lengthSq();\n\n    if (distanceTest <= line.distanceSq()) {\n      return intersection;\n    }\n\n    return;\n  }\n}\n\nexport default Line3;\n\n\n\n// WEBPACK FOOTER //\n// ./Line3.js","import Vector3 from './vector3';\n\n// Based on THREE.JS\nconst Matrix4 = function Matrix4 (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n  this.elements = new Float32Array(16);\n\n    // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\n    //   We should not support semi specification of Matrix4, it is just weird.\n\n  const te = this.elements;\n\n  te[0] = (n11 !== undefined) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\n  te[1] = n21 || 0; te[5] = (n22 !== undefined) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\n  te[2] = n31 || 0; te[6] = n32 || 0; te[10] = (n33 !== undefined) ? n33 : 1; te[14] = n34 || 0;\n  te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = (n44 !== undefined) ? n44 : 1;\n};\n\nMatrix4.prototype.makeRotationFromQuaternion = function (q) {\n  const te = this.elements;\n\n  let x = q.x,\n    y = q.y,\n    z = q.z,\n    w = q.w;\n  let x2 = x + x,\n    y2 = y + y,\n    z2 = z + z;\n  let xx = x * x2,\n    xy = x * y2,\n    xz = x * z2;\n  let yy = y * y2,\n    yz = y * z2,\n    zz = z * z2;\n  let wx = w * x2,\n    wy = w * y2,\n    wz = w * z2;\n\n  te[0] = 1 - (yy + zz);\n  te[4] = xy - wz;\n  te[8] = xz + wy;\n\n  te[1] = xy + wz;\n  te[5] = 1 - (xx + zz);\n  te[9] = yz - wx;\n\n  te[2] = xz - wy;\n  te[6] = yz + wx;\n  te[10] = 1 - (xx + yy);\n\n    // Last column\n  te[3] = 0;\n  te[7] = 0;\n  te[11] = 0;\n\n    // Bottom row\n  te[12] = 0;\n  te[13] = 0;\n  te[14] = 0;\n  te[15] = 1;\n\n  return this;\n};\n\nMatrix4.prototype.multiplyMatrices = function (a, b) {\n  const ae = a.elements;\n  const be = b.elements;\n  const te = this.elements;\n\n  let a11 = ae[0],\n    a12 = ae[4],\n    a13 = ae[8],\n    a14 = ae[12];\n  let a21 = ae[1],\n    a22 = ae[5],\n    a23 = ae[9],\n    a24 = ae[13];\n  let a31 = ae[2],\n    a32 = ae[6],\n    a33 = ae[10],\n    a34 = ae[14];\n  let a41 = ae[3],\n    a42 = ae[7],\n    a43 = ae[11],\n    a44 = ae[15];\n\n  let b11 = be[0],\n    b12 = be[4],\n    b13 = be[8],\n    b14 = be[12];\n  let b21 = be[1],\n    b22 = be[5],\n    b23 = be[9],\n    b24 = be[13];\n  let b31 = be[2],\n    b32 = be[6],\n    b33 = be[10],\n    b34 = be[14];\n  let b41 = be[3],\n    b42 = be[7],\n    b43 = be[11],\n    b44 = be[15];\n\n  te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n  te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n  te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n  te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n  te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n  te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n  te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n  te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n  te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n  te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n  te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n  te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n  te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n  te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n  te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n  te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n  return this;\n};\n\nMatrix4.prototype.multiply = function (m, n) {\n\n  if (n !== undefined) {\n\n    console.warn('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\n    return this.multiplyMatrices(m, n);\n  }\n\n  return this.multiplyMatrices(this, m);\n};\n\nMatrix4.prototype.getInverse = function (m, throwOnInvertible) {\n\n    // Based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n  const te = this.elements;\n  const me = m.elements;\n\n  let n11 = me[0],\n    n12 = me[4],\n    n13 = me[8],\n    n14 = me[12];\n  let n21 = me[1],\n    n22 = me[5],\n    n23 = me[9],\n    n24 = me[13];\n  let n31 = me[2],\n    n32 = me[6],\n    n33 = me[10],\n    n34 = me[14];\n  let n41 = me[3],\n    n42 = me[7],\n    n43 = me[11],\n    n44 = me[15];\n\n  te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n  te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n  te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n  te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n  te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n  te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n  te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n  te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n  te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n  te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n  te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n  te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n  te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n  te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n  te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n  te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n  const det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n  if (det === 0) {\n\n    const msg = 'Matrix4.getInverse(): can\\'t invert matrix, determinant is 0';\n\n    if (throwOnInvertible || false) {\n\n      throw new Error(msg);\n\n    } else {\n\n      console.warn(msg);\n\n    }\n\n    this.identity();\n\n    return this;\n  }\n\n  this.multiplyScalar(1 / det);\n\n  return this;\n\n};\n\nMatrix4.prototype.applyToVector3Array = function () {\n\n  const v1 = new Vector3();\n\n  return function (array, offset, length) {\n\n    if (offset === undefined) {\n      offset = 0;\n    }\n    if (length === undefined) {\n      length = array.length;\n    }\n\n    for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n\n      v1.x = array[j];\n      v1.y = array[j + 1];\n      v1.z = array[j + 2];\n\n      v1.applyMatrix4(this);\n\n      array[j] = v1.x;\n      array[j + 1] = v1.y;\n      array[j + 2] = v1.z;\n\n    }\n\n    return array;\n\n  };\n\n};\n\nMatrix4.prototype.makeTranslation = function (x, y, z) {\n\n  this.set(\n\n        1, 0, 0, x,\n        0, 1, 0, y,\n        0, 0, 1, z,\n        0, 0, 0, 1\n\n    );\n\n  return this;\n\n};\nMatrix4.prototype.multiplyScalar = function (s) {\n\n  const te = this.elements;\n\n  te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\n  te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\n  te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\n  te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\n\n  return this;\n\n};\nMatrix4.prototype.set = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\n  const te = this.elements;\n\n  te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\n  te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\n  te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\n  te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\n\n  return this;\n\n};\n\nMatrix4.prototype.makeScale = function (x, y, z) {\n\n  this.set(\n\n        x, 0, 0, 0,\n        0, y, 0, 0,\n        0, 0, z, 0,\n        0, 0, 0, 1\n\n    );\n\n  return this;\n\n};\n\nexport default Matrix4;\n\n\n\n// WEBPACK FOOTER //\n// ./matrix4.js","import Vector3 from './vector3.js';\n\n// Copied from Three.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nconst Plane = function (normal, constant) {\n\n  this.normal = (normal !== undefined) ? normal : new Vector3(1, 0, 0);\n  this.constant = (constant !== undefined) ? constant : 0;\n\n};\n\nPlane.prototype = {\n\n  constructor: Plane,\n\n  set (normal, constant) {\n\n    this.normal.copy(normal);\n    this.constant = constant;\n\n    return this;\n\n  },\n\n  setComponents (x, y, z, w) {\n\n    this.normal.set(x, y, z);\n    this.constant = w;\n\n    return this;\n\n  },\n\n  setFromNormalAndCoplanarPoint (normal, point) {\n\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // Must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n\n  },\n\n  setFromCoplanarPoints: (function () {\n\n    const v1 = new Vector3();\n    const v2 = new Vector3();\n\n    return function (a, b, c) {\n\n      const normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\n\n            // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n\n      return this;\n\n    };\n\n  })(),\n\n\n  copy (plane) {\n\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n\n    return this;\n\n  },\n\n  normalize () {\n\n        // Note: will lead to a divide by zero if the plane is invalid.\n\n    const inverseNormalLength = 1.0 / this.normal.length();\n\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n\n    return this;\n\n  },\n\n  negate () {\n\n    this.constant *= -1;\n    this.normal.negate();\n\n    return this;\n\n  },\n\n  distanceToPoint (point) {\n\n    return this.normal.dot(point) + this.constant;\n\n  },\n\n  distanceToSphere (sphere) {\n\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n\n  },\n\n  projectPoint (point, optionalTarget) {\n\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n\n  },\n\n  orthoPoint (point, optionalTarget) {\n\n    const perpendicularMagnitude = this.distanceToPoint(point);\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n\n  },\n\n  isIntersectionLine (line) {\n\n        // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    const startSign = this.distanceToPoint(line.start);\n    const endSign = this.distanceToPoint(line.end);\n\n    return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\n\n  },\n\n  intersectLine: (function () {\n\n    const v1 = new Vector3();\n\n    return function (line, optionalTarget) {\n\n      const result = optionalTarget || new Vector3();\n\n      const direction = line.delta(v1);\n\n      const denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n\n                // Line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n\n          return result.copy(line.start);\n\n        }\n\n                // Unsure if this is the correct method to handle this case.\n        return undefined;\n\n      }\n\n      const t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n\n        return undefined;\n\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n\n    };\n\n  })(),\n\n  intersectPlane (targetPlane) {\n        // Returns the intersection line between two planes\n    const direction = this.normal.clone().cross(targetPlane.normal);\n    const origin = new Vector3();\n    const intersectionData = {\n      origin,\n      direction\n    };\n\n        // If the planes are parallel, return an empty vector for the\n        // Intersection line\n    if (this.normal.clone().cross(targetPlane.normal).length < 1e-10) {\n      intersectionData.direction = new Vector3();\n\n      return intersectionData;\n    }\n\n    const h1 = this.constant;\n    const h2 = targetPlane.constant;\n    const n1dotn2 = this.normal.clone().dot(targetPlane.normal);\n\n    const c1 = -(h1 - h2 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n    const c2 = -(h2 - h1 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n\n    intersectionData.origin = this.normal.clone().multiplyScalar(c1).add(targetPlane.normal.clone().multiplyScalar(c2));\n\n    return intersectionData;\n  },\n\n  coplanarPoint (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n\n  },\n\n  translate (offset) {\n\n    this.constant = this.constant - offset.dot(this.normal);\n\n    return this;\n\n  },\n\n  equals (plane) {\n\n    return plane.normal.equals(this.normal) && (plane.constant === this.constant);\n\n  },\n\n  clone () {\n\n    return new Plane().copy(this);\n\n  }\n};\n\nexport default Plane;\n\n\n\n// WEBPACK FOOTER //\n// ./plane.js","function pageToPoint (e) {\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\nfunction subtract (lhs, rhs) {\n  return {\n    x: lhs.x - rhs.x,\n    y: lhs.y - rhs.y\n  };\n}\n\nfunction copy (point) {\n  return {\n    x: point.x,\n    y: point.y\n  };\n}\n\nfunction distance (from, to) {\n  return Math.sqrt(distanceSquared(from, to));\n}\n\nfunction distanceSquared (from, to) {\n  const delta = subtract(from, to);\n\n\n  return delta.x * delta.x + delta.y * delta.y;\n}\n\nfunction insideRect (point, rect) {\n  if(point.x < rect.left ||\n        point.x > rect.left + rect.width ||\n        point.y < rect.top ||\n        point.y > rect.top + rect.height) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns the closest source point to a target point\n * given an array of source points.\n *\n * @param sources An Array of source Points\n * @param target The target Point\n * @returns Point The closest point from the points array\n */\nfunction findClosestPoint (sources, target) {\n  const distances = [];\n  let minDistance;\n\n  sources.forEach(function (source, index) {\n    const d = distance(source, target);\n\n    distances.push(d);\n\n    if (index === 0) {\n      minDistance = d;\n    } else {\n      minDistance = Math.min(d, minDistance);\n    }\n  });\n\n  const index = distances.indexOf(minDistance);\n\n\n  return sources[index];\n}\n\nconst point = {\n  subtract,\n  copy,\n  pageToPoint,\n  distance,\n  distanceSquared,\n  insideRect,\n  findClosestPoint\n};\n\nexport default point;\n\n\n\n// WEBPACK FOOTER //\n// ./point.js"," import lineSegment from './lineSegment';\n\n function rectToLineSegments (rect) {\n   const top = {\n     start: {\n       x: rect.left,\n       y: rect.top\n     },\n     end: {\n       x: rect.left + rect.width,\n       y: rect.top\n\n     }\n   };\n   const right = {\n     start: {\n       x: rect.left + rect.width,\n       y: rect.top\n     },\n     end: {\n       x: rect.left + rect.width,\n       y: rect.top + rect.height\n\n     }\n   };\n   const bottom = {\n     start: {\n       x: rect.left + rect.width,\n       y: rect.top + rect.height\n     },\n     end: {\n       x: rect.left,\n       y: rect.top + rect.height\n\n     }\n   };\n   const left = {\n     start: {\n       x: rect.left,\n       y: rect.top + rect.height\n     },\n     end: {\n       x: rect.left,\n       y: rect.top\n\n     }\n   };\n   const lineSegments = [top, right, bottom, left];\n\n\n   return lineSegments;\n }\n\n function distanceToPoint (rect, point) {\n   let minDistance = 655535;\n   const lineSegments = rectToLineSegments(rect);\n\n   lineSegments.forEach(function (segment) {\n     const distance = lineSegment.distanceToPoint(segment, point);\n\n     if(distance < minDistance) {\n       minDistance = distance;\n     }\n   });\n\n   return minDistance;\n }\n\n// Returns top-left and bottom-right points of the rectangle\n function rectToPoints (rect) {\n   const rectPoints = {\n     topLeft: {\n       x: rect.left,\n       y: rect.top\n     },\n     bottomRight: {\n       x: rect.left + rect.width,\n       y: rect.top + rect.height\n     }\n   };\n\n   return rectPoints;\n }\n\n// Returns whether two non-rotated rectangles are intersected\n function doesIntersect (rect1, rect2) {\n   let intersectLeftRight;\n   let intersectTopBottom;\n\n   const rect1Points = rectToPoints(rect1);\n   const rect2Points = rectToPoints(rect2);\n\n   if (rect1.width >= 0) {\n     if (rect2.width >= 0) {\n       intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.topLeft.x));\n     } else {\n       intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.topLeft.x));\n     }\n   } else if (rect2.width >= 0) {\n     intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.bottomRight.x));\n   } else {\n     intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.bottomRight.x));\n   }\n\n   if (rect1.height >= 0) {\n     if (rect2.height >= 0) {\n       intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.topLeft.y));\n     } else {\n       intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.bottomRight.y) || (rect2Points.topLeft.y <= rect1Points.topLeft.y));\n     }\n   } else if (rect2.height >= 0) {\n     intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.bottomRight.y));\n   } else {\n     intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.bottomRight.y) || (rect2Points.top <= rect1Points.bottomRight.y));\n   }\n\n   return intersectLeftRight && intersectTopBottom;\n }\n\n// Returns intersection points of two non-rotated rectangles\n function getIntersectionRect (rect1, rect2) {\n   const intersectRect = {\n     topLeft: {},\n     bottomRight: {}\n   };\n\n   if (!doesIntersect(rect1, rect2)) {\n     return;\n   }\n\n   const rect1Points = rectToPoints(rect1);\n   const rect2Points = rectToPoints(rect2);\n\n   if (rect1.width >= 0) {\n     if (rect2.width >= 0) {\n       intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.topLeft.x);\n       intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n     } else {\n       intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n       intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n     }\n   } else if (rect2.width >= 0) {\n     intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n     intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n   } else {\n     intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.topLeft.x);\n     intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n   }\n\n   if (rect1.height >= 0) {\n     if (rect2.height >= 0) {\n       intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.topLeft.y);\n       intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n     } else {\n       intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n       intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n     }\n   } else if (rect2.height >= 0) {\n     intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n     intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n   } else {\n     intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.topLeft.y);\n     intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n   }\n\n    // Returns top-left and bottom-right points of intersected rectangle\n   return intersectRect;\n\n }\n\n const rect = {\n   distanceToPoint,\n   getIntersectionRect\n };\n\n export default rect;\n\n\n\n// WEBPACK FOOTER //\n// ./rect.js","export { default as Line3 } from './Line3.js';\nexport { default as lineSegment } from './lineSegment.js';\nexport { clamp,\n         degToRad,\n         radToDeg,\n         sign } from './math.js';\n\nexport { default as Matrix4 } from './matrix4.js';\nexport { default as Plane } from './plane.js';\nexport { default as point } from './point.js';\nexport { default as quaternion } from './quaternion.js';\nexport { default as rect } from './rect.js';\nexport { default as Vector3 } from './vector3.js';\n\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}